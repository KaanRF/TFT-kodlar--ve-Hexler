#include "stm32f4xx.h"
#include "system_stm32f4xx.h"
#include "delay.h"
#include "tft_lcd.h"
#include "touch.h"
#include "math.h"
#include "stdio.h"

//ADC adres tanimlayalim
#define ADC1_DR_ADDRESS    (ADC1_BASE + 0x4C)

__IO uint16_t ADCConvertedValue;
__IO uint16_t AD_Value;


void tft_yaz(void);
void lm35oku(void);

extern unsigned int xxx,yyy;
extern unsigned char flag;

extern u8 gImage_RES[];
extern u8 gImage_logo[];
extern u8 gImage_NKU[];
extern u8 gImage_gs[];
extern u8 gImage_r3[];
extern u8 gImage_sil[];

float j,k;
char deger1[30];

static __IO uint32_t TimingDelay;
void ADC1_CH3_DMA_Config(void);


int main(void)
{

  if (SysTick_Config(SystemCoreClock / 1000))
  { 
    /* Capture error */ 
    while (1);
  }
	
	touch_init();
  Delay(0x3FFFFF);
  
	LCD_Init();
  Delay(0x3FFFFF);
  LCD_Clear(RED);
  LCD_SetTextColor(GREEN);
	LCD_BackLight(100);
	
//	tft_yaz();
	Delay(500);
	
 
  LCD_SetDisplayWindow(0, 0, 239, 319);

ADC1_CH3_DMA_Config();
	/* Start ADC1 Software Conversion */ 
  ADC_SoftwareStartConv(ADC1);
	
  while(1)
  { 
		lm35oku();
		
		
		

 }
}
void tft_yaz(void)
{
	LCD_SetTextColor(GREEN);

	  LCD_SetBackColor(LCD_COLOR_BLUE);
	  LCD_BackLight(100);
	  LCD_StringLine(100,30, "Kaan");
	  LCD_StringLine(85,45, "Kandemir");
	  LCD_StringLine(30,80,"NAMIK KEMAL UNIVERSITESI");
	  LCD_StringLine(15,100,"CORLU MUHENDISLIK FAKULTESI");
	  LCD_StringLine(8,125,"ELEKTRONIK VE HABERLESME MUH.");
    LCD_StringLine(45,150,"KEIL UVISION 4.70");
	LCD_StringLine(55,170,"SSD1289+XPT2046");
}



void ADC1_CH3_DMA_Config(void)
{
	ADC_InitTypeDef ADC_InitStructure;
  ADC_CommonInitTypeDef ADC_CommonInitStructure;
	DMA_InitTypeDef DMA_InitStructure;
	GPIO_InitTypeDef GPIO_InitStructure;
	
	//ADC DMA GPIO BUS YOLLARI ACILMASI GEREK
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_DMA2|RCC_AHB1Periph_GPIOA,ENABLE);
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1,ENABLE);
	
	//DMA2 KANALI AYARLAMARI KANAL0 ICIN
	
	DMA_DeInit(DMA2_Stream0);
  DMA_InitStructure.DMA_Channel = DMA_Channel_0;  
  DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)ADC1_DR_ADDRESS;//ADC SONUCUN YAZILDIGI KANALDAN VERIYI AL
  DMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)&ADCConvertedValue;//MEMORYE CEVRIM DEGERINI YUKE
  DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralToMemory;
  DMA_InitStructure.DMA_BufferSize = 1;//
  DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
  DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Disable;
  DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
  DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
  DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
  DMA_InitStructure.DMA_Priority = DMA_Priority_High;
  DMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Disable;         
  DMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_HalfFull;
  DMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_Single;
  DMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
  DMA_Init(DMA2_Stream0, &DMA_InitStructure);
  DMA_Cmd(DMA2_Stream0, ENABLE);
	//GPIO AYARLARI ADC IN OLARAK A3 SECILIYOR
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
  GPIO_Init(GPIOA, &GPIO_InitStructure);
	//ADC COMMON INIT AYARLARIMIZ 
	ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
  ADC_CommonInitStructure.ADC_Prescaler = ADC_Prescaler_Div2;
  ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
  ADC_CommonInitStructure.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
  ADC_CommonInit(&ADC_CommonInitStructure);
	//ADC1 AYARLAMALARIMIZI YAPALIM
	
	 ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;//12 BIT ADC CEVRIM YAPICAZ
  ADC_InitStructure.ADC_ScanConvMode = DISABLE;
  ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;// SUREKLI DEGISIMLERI KONTROL EDICEZ
  ADC_InitStructure.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;//DIS KESMLER DEVREDISI
  ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
  ADC_InitStructure.ADC_NbrOfConversion = 1;
  ADC_Init(ADC1, &ADC_InitStructure);
	
	/* AKTIF EDELIM ADC1 DMA */
  ADC_DMACmd(ADC1, ENABLE);
	
	ADC_RegularChannelConfig(ADC1, ADC_Channel_3, 1, ADC_SampleTime_15Cycles);
	// Enable DMA request after last transfer (Single-ADC mode) 
  ADC_DMARequestAfterLastTransferCmd(ADC1, ENABLE);

  //ADC1 AKTIF
  ADC_Cmd(ADC1, ENABLE);
	
}

void lm35oku(void)
{
	LCD_Clear(YELLOW);
	
	AD_Value=ADCConvertedValue;
		
		LCD_SetTextColor(LCD_COLOR_BLUE2);
	  LCD_StringLine(25,15,"Kaan Kandemir 11/05/2013");
	  LCD_StringLine(32,35,"LM35 ADC1 SICAKLIK UYG.");
		sprintf(deger1,"adc: %04d=%08x",ADCConvertedValue,ADCConvertedValue);
		LCD_StringLine(50,70,(u8*)deger1);
		sprintf(deger1,"LM35: %4.3f mV  ",(AD_Value * 3300.0 / 0x0fff));
		LCD_StringLine(50,95,(u8*)deger1);
		sprintf(deger1,"LM35: %02.2f  c    ",(AD_Value*1.0)/10.0);
		LCD_StringLine(50,115,(u8*)deger1);
		
		Delay(1000);
	LCD_WriteBMP(170,290,100,100,gImage_logo);
		
}




uint16_t EVAL_AUDIO_GetSampleCallBack(void)
{
    return 0; // ses çipini kullaniyorsaniz tek sample veriyi burada return ile döndürün.
}
void EVAL_AUDIO_TransferComplete_CallBack(uint32_t pBuffer, uint32_t Size)
{
    return; // ses çipini kullaniyorsaniz  burada çipe veri aktarimi DMA sona ermis
}

